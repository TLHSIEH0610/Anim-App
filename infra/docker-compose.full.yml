version: "3.9"

services:
  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: animapp-backend
    environment:
      - DATABASE_URL=postgresql://animapp:password@db:5432/animapp
      - REDIS_URL=redis://redis:6379/0
      - COMFYUI_SERVER=comfyui:8188
      - MEDIA_ROOT=/data/media
      - COMFYUI_WORKFLOW=/app/workflows/image_to_animation.json
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - ../backend:/app:delegated
      - media:/data/media
      - workflows:/app/workflows
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - comfyui
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    restart: unless-stopped

  # RQ Worker for job processing
  worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: animapp-worker
    environment:
      - DATABASE_URL=postgresql://animapp:password@db:5432/animapp
      - REDIS_URL=redis://redis:6379/0
      - COMFYUI_SERVER=comfyui:8188
      - MEDIA_ROOT=/data/media
      - COMFYUI_WORKFLOW=/app/workflows/image_to_animation.json
    volumes:
      - ../backend:/app:delegated
      - media:/data/media
      - workflows:/app/workflows
    depends_on:
      - redis
      - db
      - comfyui
    command: ["python", "-m", "rq", "worker", "jobs", "--url", "redis://redis:6379/0"]
    restart: unless-stopped

  # ComfyUI for image processing
  comfyui:
    build:
      context: .
      dockerfile: comfyui.Dockerfile
    container_name: animapp-comfyui
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - comfyui_models:/app/models
      - comfyui_output:/app/output
      - workflows:/app/workflows
    ports:
      - "8188:8188"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: ["python", "main.py", "--listen", "0.0.0.0", "--port", "8188"]
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: animapp-db
    environment:
      - POSTGRES_DB=animapp
      - POSTGRES_USER=animapp
      - POSTGRES_PASSWORD=password
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for job queue
  redis:
    image: redis:7-alpine
    container_name: animapp-redis
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Frontend (optional - for development)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: animapp-frontend
    volumes:
      - ../frontend:/app:delegated
      - /app/node_modules
    ports:
      - "19006:19006"  # Expo web
      - "19000:19000"  # Expo dev tools
      - "19001:19001"  # Expo dev server
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  media:
    driver: local
  comfyui_models:
    driver: local
  comfyui_output:
    driver: local
  workflows:
    driver: local

networks:
  default:
    name: animapp-network